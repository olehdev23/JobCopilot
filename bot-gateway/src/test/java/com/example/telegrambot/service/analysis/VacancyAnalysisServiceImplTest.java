//package com.example.telegrambot.service.analysis;
//
//import com.example.telegrambot.model.User;
//import org.junit.jupiter.api.BeforeEach;
//import org.junit.jupiter.api.Test;
//import org.junit.jupiter.api.extension.ExtendWith;
//import org.mockito.ArgumentCaptor;
//import org.mockito.Captor;
//import org.mockito.Mock;
//import org.mockito.junit.jupiter.MockitoExtension;
//import org.springframework.ai.chat.client.ChatClient;
//import org.springframework.ai.chat.messages.AssistantMessage;
//import org.springframework.ai.chat.model.ChatModel;
//import org.springframework.ai.chat.model.ChatResponse;
//import org.springframework.ai.chat.model.Generation;
//import org.springframework.ai.chat.prompt.Prompt;
//
//import java.util.List;
//
//import static org.junit.jupiter.api.Assertions.assertTrue;
//import static org.mockito.ArgumentMatchers.any;
//import static org.mockito.Mockito.verify;
//import static org.mockito.Mockito.when;
//
//@ExtendWith(MockitoExtension.class)
//class VacancyAnalysisServiceImplTest {
//
//    @Mock
//    private ChatModel chatModel;
//
//    @Captor
//    private ArgumentCaptor<Prompt> promptCaptor;
//
//    private VacancyAnalysisServiceImpl vacancyAnalysisService;
//
//    @BeforeEach
//    void setUp() {
//        ChatClient.Builder builder = ChatClient.builder(chatModel);
//        vacancyAnalysisService = new VacancyAnalysisServiceImpl(builder);
//    }
//
//    @Test
//    void analyze_shouldConstructCorrectPromptAndAppendDisclaimer() {
//        User testUser = new User();
//        testUser.setChatId(123L);
//        testUser.setCv("My amazing CV text.");
//
//        String vacancyText = "A very cool job vacancy.";
//        String mockAiResponseText = "This is a mocked AI Response.";
//
//        AssistantMessage assistantMessage = new AssistantMessage(mockAiResponseText);
//        Generation mockGeneration = new Generation(assistantMessage);
//        ChatResponse mockChatResponse = new ChatResponse(List.of(mockGeneration));
//
//        when(chatModel.call(any(Prompt.class))).thenReturn(mockChatResponse);
//
//        String finalResult = vacancyAnalysisService.analyze(testUser, vacancyText);
//
//        assertTrue(finalResult.startsWith(mockAiResponseText));
//        assertTrue(finalResult.contains("Disclaimer: This content was generated by an AI."));
//
//        verify(chatModel).call(promptCaptor.capture());
//        Prompt capturedPrompt = promptCaptor.getValue();
//
//        String promptContents = capturedPrompt.getContents();
//        assertTrue(promptContents.contains("My amazing CV text."));
//        assertTrue(promptContents.contains("A very cool job vacancy."));
//    }
//
//    @Test
//    void analyze_whenUserCvIsNull_shouldUsePlaceholderInPrompt() {
//        User userWithoutCv = new User();
//        userWithoutCv.setChatId(456L);
//        userWithoutCv.setCv(null);
//
//        String vacancyText = "Another job vacancy.";
//        String mockAiResponseText = "Mock response for user without CV.";
//
//        AssistantMessage assistantMessage = new AssistantMessage(mockAiResponseText);
//        Generation mockGeneration = new Generation(assistantMessage);
//        ChatResponse mockChatResponse = new ChatResponse(List.of(mockGeneration));
//        when(chatModel.call(any(Prompt.class))).thenReturn(mockChatResponse);
//
//        String finalResult = vacancyAnalysisService.analyze(userWithoutCv, vacancyText);
//
//        assertTrue(finalResult.startsWith(mockAiResponseText));
//
//        verify(chatModel).call(promptCaptor.capture());
//        String promptContents = promptCaptor.getValue().getContents();
//
//        assertTrue(promptContents.contains("--- CANDIDATE'S RESUME ---\n" +
//                "No CV provided by the user."));
//        assertTrue(promptContents.contains(vacancyText));
//    }
//
//    @Test
//    void analyze_whenAiReturnsNullResponse_shouldReturnErrorMessage() {
//        User testUser = new User();
//        testUser.setChatId(789L);
//        testUser.setCv("Some CV text.");
//        String vacancyText = "Some vacancy text.";
//
//        when(chatModel.call(any(Prompt.class))).thenReturn(null);
//
//        String finalResult = vacancyAnalysisService.analyze(testUser, vacancyText);
//
//        assertTrue(finalResult.contains("Sorry, an error occurred while analyzing the vacancy."));
//    }
//}
