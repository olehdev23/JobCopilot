package com.example.telegrambot.service.analysis;

import com.example.telegrambot.model.User;
import lombok.extern.slf4j.Slf4j;
import org.springframework.ai.chat.client.ChatClient;
import org.springframework.stereotype.Service;

@Service
@Slf4j
public class VacancyAnalysisServiceImpl implements VacancyAnalysisService {
    private final ChatClient chatClient;

    public VacancyAnalysisServiceImpl(ChatClient.Builder builder) {
        this.chatClient = builder.build();
    }

    @Override
    public String analyze(User user, String vacancyText) {
        String cvText = (user.getCv() == null || user.getCv().isBlank())
                ? "No CV provided by the user."
                : user.getCv();

        String promptText = """
        **Role:** You are "Elena", a professional and empathetic career coach.
        **Task:** Based on the candidate's RESUME and the JOB VACANCY, 
        create a complete "Application Pack".

        **Instructions:**
        Generate the output in two distinct parts: a Cover Letter and Interview Preparation Tips.

        --- PART 1: COVER LETTER ---
        Write a polite, professional, and compelling cover letter.
        - In the main body, highlight 2-3 key skills from the RESUME that match the JOB VACANCY.
        - Keep the tone confident but humble.

        --- PART 2: INTERVIEW PREPARATION TIPS ---
        Based on the JOB VACANCY, generate a list of potential interview questions.
        - Include 3-4 technical questions related to the required technologies
         (e.g., "Can you explain the difference between...").
        - Include 1-2 behavioral questions (e.g., "Describe a time when you...").
        - Suggest 1-2 key topics the candidate should research about the company.

        --- CANDIDATE'S RESUME ---
        %s

        --- JOB VACANCY ---
        %s
                """.formatted(cvText, vacancyText);

        log.info("Generating a full 'Application Pack' for user: {}", user.getChatId());

        String applicationPack;

        try {
            applicationPack = chatClient.prompt()
                    .user(promptText)
                    .call()
                    .content();

            if (applicationPack == null) {
                throw new IllegalStateException("AI returned null or empty content.");
            }
            log.info("Application Pack generated successfully.");

        } catch (Exception e) {
            log.error("AI analysis failed for user: {}", user.getChatId(), e);
            return "Sorry, an error occurred while analyzing the vacancy. Please try again later.";
        }

        String disclaimer = """
        ---
        *Disclaimer: This content was generated by an AI. 
        It is strongly recommended to review, edit, and personalize it before use.*
                """;

        return applicationPack + disclaimer;
    }
}
