# version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15-alpine
    container_name: job-copilot-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  user-data-access:
    build:
      context: .
      target: user-data-access-runner
    container_name: user-data-access
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: java -jar /app/app.jar

  analysis-service:
    build:
      context: .
      target: analysis-service-runner
    container_name: analysis-service
    ports:
      - "8082:8082"
    depends_on:
      kafka:
        condition: service_started
#      ollama-service:
#        condition: service_started
      user-data-access:
        condition: service_healthy
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MICROSERVICES_USER_DATA_ACCESS_URL=${USER_DATA_ACCESS_URL}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE}
      - SPRING_AI_OLLAMA_BASE_URL=${OLLAMA_URL}
    command: java -jar /app/app.jar

  bot-gateway:
    build:
      context: .
      target: bot-gateway-runner
    container_name: bot-gateway
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_started
      user-data-access:
        condition: service_healthy
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MICROSERVICES_USER_DATA_ACCESS_URL=${USER_DATA_ACCESS_URL}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE}
    command: ["java", "-jar", "/app/app.jar"]

#  ollama-service:
#    build:
#      context: .
#      dockerfile: Dockerfile.ollama  # Шлях до нового Dockerfile
#    container_name: ollama-service
#    ports:
#      - "11434:11434"

volumes:
  postgres_data: